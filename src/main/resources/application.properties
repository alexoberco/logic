# --- Datasource PostgreSQL ---
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=admin
quarkus.datasource.password=admin
# Cambiado "db" por el nombre del Service creado;
quarkus.datasource.jdbc.url=jdbc:postgresql://my-postgres-postgresql:5432/baseTaller
quarkus.hibernate-orm.database.generation=update

# --- RabbitMQ ---
# Canal de salida (emitter)
mp.messaging.outgoing.order-confirmations-out.connector=smallrye-rabbitmq
mp.messaging.outgoing.order-confirmations-out.exchange.name=order-exchange
# Cambia "rabbitmq" por el nombre del Service para RabbitMQ;
mp.messaging.outgoing.order-confirmations-out.host=my-rabbitmq
mp.messaging.outgoing.order-confirmations-out.port=5672
mp.messaging.outgoing.order-confirmations-out.username=guest
mp.messaging.outgoing.order-confirmations-out.password=guest

# Canal de entrada (consumer)
mp.messaging.incoming.order-confirmations-in.connector=smallrye-rabbitmq
mp.messaging.incoming.order-confirmations-in.exchange.name=order-exchange
mp.messaging.incoming.order-confirmations-in.queue.name=order-queue
mp.messaging.incoming.order-confirmations-in.host=my-rabbitmq
mp.messaging.incoming.order-confirmations-in.port=5672
mp.messaging.incoming.order-confirmations-in.username=guest
mp.messaging.incoming.order-confirmations-in.password=guest

# --- Mailer ---
quarkus.mailer.from=from@example.com
quarkus.mailer.host=sandbox.smtp.mailtrap.io
quarkus.mailer.port=2525
quarkus.mailer.username=559ece1e711eb3
quarkus.mailer.password=68b0d0679f885e
quarkus.mailer.start-tls=OPTIONAL
quarkus.mailer.ssl=false

# --- Qute (templates) ---
quarkus.qute.templates-path=templates

# 1. Habilita el filtro CORS
quarkus.http.cors=true

# 2. Orígenes permitidos (puede ser un listado CSV o expresión regular)
quarkus.http.cors.origins=*

# 3. Métodos HTTP permitidos (por defecto permite todos)
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS

# 4. Cabeceras que el cliente puede enviar
quarkus.http.cors.headers=accept,authorization,content-type,Content-Disposition

# 5. Cabeceras expuestas en la respuesta (si las necesitas)
quarkus.http.cors.exposed-headers=location,content-disposition

# 6. Tiempo que el navegador cachea la respuesta preflight (java.time.Duration)
quarkus.http.cors.access-control-max-age=24H

# 7. Permitir envío de credenciales (cookies, encabezados auth)
quarkus.http.cors.access-control-allow-credentials=true

